<?php

/**
 * @file
 * Contains module hooks.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function ivw_integration_theme() {
  return [
    'ivw_call' => [
      'variables' => [
        'st' => NULL,
        'cp' => NULL,
        'sv' => NULL,
        'co' => NULL,
        'sc' => NULL,
        'mobile_st' => NULL,
        'mobile_cp' => NULL,
        'mobile_sv' => NULL,
        'mobile_width' => NULL,
      ],
      'template' => 'ivw-call',
    ],
  ];
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() for node_form().
 */
function ivw_integration_form_node_form_alter(&$form, FormStateInterface $form_state) {
  /* Is there a better way to get the node? */
  $entity = $form_state->getBuildInfo()['callback_object']->getEntity();
  $has_settings = FALSE;

  /*
   * Set group of all ivw_integration_settings elements
   */
  foreach ($entity->getFieldDefinitions() as $fieldDefinition) {
    if ($fieldDefinition->getType() === 'ivw_integration_settings') {
      $has_settings = TRUE;
      $form[$fieldDefinition->getName()]['#group'] = 'ivw_integration_settings_override';
    }
  }
  if ($has_settings) {
    if (empty($form['advanced'])) {
      $form['advanced'] = [
        '#type' => 'vertical_tabs',
        '#attributes' => ['class' => ['entity-meta']],
        '#weight' => 99,
      ];
    }
    $form['ivw_integration_settings_override'] = [
      '#type' => 'details',
      '#title' => t('IVW settings'),
      '#open' => FALSE,
      '#group' => 'advanced',
      '#optional' => TRUE,
    ];

  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() for node_form().
 */
function ivw_integration_form_taxonomy_term_form_alter(&$form, FormStateInterface $form_state) {
  ivw_integration_form_node_form_alter($form, $form_state);
}

/**
 * Implements hook_page_attachments().
 */
function ivw_integration_page_attachments(array &$page) {
  $trackerService = \Drupal::service('ivw_integration.tracker');
  $tracker = $trackerService->getTrackingInformation();

  // Site value is missing, do not render tag.
  if (empty($tracker['st'])) {
    return;
  }

  // Base minification script on the core javascript setting.
  $minified = \Drupal::config('system.performance')->get('js.preprocess');

  $page['#cache']['tags'] = Cache::mergeTags(isset($page['#cache']['tags']) ? $page['#cache']['tags'] : [], $trackerService->getCacheTags());

  $page['#attached']['html_head'][] = [
    [
      '#tag' => 'script',
      '#attributes' => [
        'src' => 'https://script.ioam.de/iam.js' . ($minified ? '?m=1' : ''),
      ],
    ],
    'ivw_library',
  ];

  $page['#attached']['library'][] = 'ivw_integration/ivw_call';
}
