<?php

/**
 * @file
 * Contains update hooks.
 */

use Drupal\Core\Config\InstallStorage;
use Drupal\Core\Entity\Entity\EntityFormDisplay;

/**
 * Set all required config objects.
 */
function riddle_marketplace_update_8001() {
  $settingYmlFilename = 'riddle_marketplace.settings';
  $moduleName = 'riddle_marketplace';

  $storedSettings = \Drupal::configFactory()
    ->getEditable('riddle_marketplace.settings');

  $sourceStorage = new InstallStorage();
  $sourceData = $sourceStorage->read($settingYmlFilename);
  if (FALSE === $sourceData) {
    \Drupal::logger('php')
      ->warning('Not existing config file: ' . $settingYmlFilename . '.yml');
  }

  $sourceConfig = $sourceData[$moduleName];
  if (empty($sourceConfig) || !is_array($sourceConfig)) {
    \Drupal::logger('php')
      ->warning('Not existing configuration for module: ' . $moduleName);
  }

  // Check defined configuration keys from settings file.
  $version8001Keys = ['api_url', 'url', 'empty_title_prefix'];
  foreach ($sourceConfig as $sourceKey => $sourceValue) {
    if (in_array($sourceKey, $version8001Keys)) {
      $storedKey = $moduleName . '.' . $sourceKey;

      if (NULL === $storedSettings->get($storedKey)) {
        $storedSettings->set($storedKey, $sourceValue)->save(TRUE);
      }
    }
  }
}

/**
 * Update to riddle 2.x.
 */
function riddle_marketplace_update_8200() {

  $display = EntityFormDisplay::load('paragraph.paragraphs_riddle_marketplace.default');

  if (!empty($display)) {
    $component = $display->getComponent('field_link');

    if ($component['type'] == 'riddle_url_field_widget') {
      $component['type'] = 'link_default';
      $display->setComponent('field_link', $component)->save();
    }
  }

  \Drupal::database()->delete('key_value')
    ->condition('collection', 'system.schema')
    ->condition('name', 'paragraphs_riddle_marketplace')
    ->execute();
}
